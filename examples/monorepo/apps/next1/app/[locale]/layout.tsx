import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import Link from 'next/link';

import { I18nProviderClient } from '@/i18n';

import '../globals.css';

// Client component for i18n

const inter = Inter({ subsets: ['latin'] });

// Define supported locales
const availableLocales = ['en', 'pl'] as const;
export const i18nConfig = {
  defaultLocale: 'en',
  locales: availableLocales,
} as const;

export type Locale = (typeof availableLocales)[number];

export async function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

export function generateMetadata({
  params,
}: {
  params: { locale: Locale };
}): Metadata {
  const currentLocale = params.locale;
  return {
    title: currentLocale === 'pl' ? 'Apka Next 1' : 'Next App 1',
    description:
      currentLocale === 'pl'
        ? 'Wygenerowane z lib1 i i18next'
        : 'Generated by create next app with lib1 and i18next',
  };
}

export default function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: Locale };
}) {
  console.log('[RootLayout] Rendering with locale:', locale);

  const currentLocale = locale || i18nConfig.defaultLocale;

  return (
    <html lang={currentLocale}>
      <body className={inter.className}>
        <I18nProviderClient locale={currentLocale as string}>
          <nav className="p-4 bg-gray-800 text-white">
            <Link href={`/${currentLocale}`} className="mr-4 hover:underline">
              Home
            </Link>
            <Link href={`/${currentLocale}/about`} className="hover:underline">
              About
            </Link>
          </nav>
          <main className="p-4">{children}</main>
        </I18nProviderClient>
      </body>
    </html>
  );
}
